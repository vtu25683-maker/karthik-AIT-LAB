graph = {
&#39;5&#39; : [&#39;3&#39;,&#39;7&#39;],
&#39;3&#39; : [&#39;2&#39;, &#39;4&#39;],
&#39;7&#39; : [&#39;8&#39;],
&#39;2&#39; : [],
&#39;4&#39; : [&#39;8&#39;],
&#39;8&#39; : []
}

visited = [] # List for visited nodes.
queue = [] #Initialize a queue

def bfs(visited, graph, node): #function for BFS
visited.append(node)
queue.append(node)

while queue: # Creating loop to visit each node
m = queue.pop(0)

print (m, end = &quot; &quot;)

for neighbour in graph[m]:
if neighbour not in visited:
visited.append(neighbour)
queue.append(neighbour)

# Driver Code
print(&quot;Following is the Breadth-First Search&quot;)
bfs(visited, graph, &#39;5&#39;) # function calling
